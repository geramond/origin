greeting
greetings = greeting.gsub("Everyone!", "Friends!")
greeting
greeting.gsub("Everyone!", "Friends!")
"Good morning, Frank!"
name = "Frank"
"Good morning, " + name + "!"
puts "Good morning, #{name}!"
modifier = "very"
mood = "excited"
puts "I am #{modifier * 3 + mood} for today`s class!"
modifier = "very "
puts "I am #{modifier * 3 + mood} for today`s class!"
for(var i = 0; i < 5; i++){\
    console.log("Hello, world");\
}\
\
end
5.times do\
  puts "Hello, world!"\
end
5.times{ puts "Hello, world!"}
"this is a sentence".gsub("e"){puts "Found an E!"}
5.times do |i|\
  puts "Hello, world!"\
end
i
puts i
5.times do |i|\
  puts "Hello, world!"\
end
5.times do |i|\
  puts "#{i}: Hello, world!"\
end
"this is a senctence".gsub("e"){|letter| letter.upcase}
meals = ["Breakfast", "Lunch", "Dinner"]
meals
meals << "Desert"
meals[2]
meals.last
one = ["this", "is", "an", "array"]
one.sort
one.sort(each)
one.each
one.join
one.index
one.include
one.include
include
one.include
one
one.include
produce = {"apples" => 3, "oranges" => 1, "carrots" => 12}
produce

produce["grapes"] = 221
produce
produce["oranges"] = 6
produce
produce.key
produce.keys
produce.values
produce
puts "There are #{produce[:oranges]} oranges in the fridge."
puts "There are #{produce['oranges']} oranges in the fridge."
puts "There are #{produce[:oranges]} oranges in the fridge."
produce = {apples: 3, oranges: 1, carrots: 12}
produce
puts "There are #{produce[:oranges]} oranges in the fridge."
ruby -v
"5".to_i
a = "5".to_i
a.class
exit
a = 5.to_i
b = 10.to_i
c = 20.to_i
a
b
c
a.class
[a,b,c].sort
m = [a,b,c].sort
m
arr = [c,b,a]
arr
arr1 = arr.sort
arr1
arr1[0]
arr1[1]
arr1[2]
exit
cities
 i+2\
end
new_array
loop do\
  puts "1. Calculate ideal weight"\
  puts "2. Calculate triangle`s area"\
  puts "0. Exit"\
  puts "Choose an option: "\
  input = gets.to_i\
  break if input == 0\
end
a = 1
a + 1
class Train\
  def speed\
    10\
  end\
end
train = Train.new
train.speed
exit
Train
Test
Truck
Car
car = Car.new
car.method
car.methods
car.start_engine
car.current_rpm
car.engine_stopped?
